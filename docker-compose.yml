version: "3.5"

services:
  mailhog:
    build: docker/mailhog
    expose:
      - "8025"
      - "1025"
    ports:
      - "${MAILHOG_PORT}:8025"
    networks:
      - default
  satis:
    build: docker/satis
    expose:
      - "80"
    environment:
      - "DEBUG=${DEBUG}"
    ports:
      - "8085:80"
    volumes:
      - ./services/satis/packages:/opt/satis/packages
    networks:
      - default
  zookeeper:
    image: blacktop/kafka:3.1
    command: zookeeper-server-start.sh config/zookeeper.properties
    expose:
      - "2181"
    networks:
      - default
  kafka:
    image: blacktop/kafka:3.1
    depends_on:
      - zookeeper
    expose:
      - "9092"
    entrypoint: /wait-for-it.sh zookeeper:2181 -s --timeout=0 -- /kafka-entrypoint.sh
    command: kafka-server-start.sh config/server.properties
    environment:
      - "KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092"
      - "KAFKA_BROKER_ID=1"
      - "KAFKA_PORT=9092"
      - "KAFKA_CREATE_TOPICS=roles:1:1,user-stream:1:1,notifications:1:1,task-stream,task-workflow:1:1,payments:1:1,stats:1:1"
      - "KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181"
      - "KAFKA_HEAP_OPTS=-Xmx2G -Xms2G"
      - "KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1"
    links:
      - zookeeper
    restart: on-failure
    networks:
      - default
  auth:
    build: docker/roadrunner
    tty: true
    stdin_open: true
    volumes:
      - ./services/auth:/opt/app
      - ./var/log/app:/var/log/app
    expose:
      - "80"
    ports:
      - "${LOCAL_AUTH_PORT}:80"
    environment:
      - "DEBUG=${DEBUG}"
      - "KAFKA_DSN=kafka:9092"
      - "OAUTH_CLIENT_ID=${OAUTH_CLIENT_ID}"
      - "OAUTH_CLIENT_SECRET=${OAUTH_CLIENT_SECRET}"
      - "OAUTH_CLIENT_REDIRECT=${OAUTH_CLIENT_REDIRECT}"
      - "TIMER_SPEED=${TIMER_SPEED}"
      - "TIMER_BEGIN=${TIMER_BEGIN}"
      - "WAIT_SATIS=1"
    depends_on:
      - satis
      - kafka
    networks:
      - default
  accounting:
    build: docker/roadrunner
    tty: true
    stdin_open: true
    volumes:
      - ./services/accounting:/opt/app
      - ./var/log/app:/var/log/app
    expose:
      - "80"
    environment:
      - "DEBUG=${DEBUG}"
      - "KAFKA_DSN=kafka:9092"
      - "AUTH_HOST=http://auth"
      - "WORKDAY_OVER=${WORKDAY_OVER}"
      - "TIMEZONE=${TIMEZONE}"
      - "TIMER_SPEED=${TIMER_SPEED}"
      - "TIMER_BEGIN=${TIMER_BEGIN}"
      - "WAIT_SATIS=1"
      - "WAIT_AUTH=1"
    depends_on:
      - satis
      - auth
      - kafka
      - sender
    networks:
      - default
  analytics:
    build: docker/roadrunner
    tty: true
    stdin_open: true
    volumes:
      - ./services/analytics:/opt/app
      - ./var/log/app:/var/log/app
    expose:
      - "80"
    environment:
      - "DEBUG=${DEBUG}"
      - "KAFKA_DSN=kafka:9092"
      - "AUTH_HOST=http://auth"
      - "TIMEZONE=${TIMEZONE}"
      - "TIMER_SPEED=${TIMER_SPEED}"
      - "TIMER_BEGIN=${TIMER_BEGIN}"
      - "WAIT_SATIS=1"
      - "WAIT_AUTH=1"
    depends_on:
      - satis
      - auth
      - kafka
    networks:
      - default
  sender:
    build: docker/roadrunner
    tty: true
    stdin_open: true
    volumes:
      - ./services/sender:/opt/app
      - ./var/log/app:/var/log/app
    environment:
      - "DEBUG=${DEBUG}"
      - "MAILER_DSN=${MAILER_DSN}"
      - "SENDER_EMAIL=${SENDER_EMAIL}"
      - "SENDER_NAME=${SENDER_NAME}"
      - "KAFKA_DSN=kafka:9092"
      - "TIMEZONE=${TIMEZONE}"
      - "TIMER_SPEED=${TIMER_SPEED}"
      - "TIMER_BEGIN=${TIMER_BEGIN}"
      - "WAIT_SATIS=1"
      - "WAIT_AUTH=1"
    depends_on:
      - satis
      - auth
      - kafka
    networks:
      - default
  task-tracker:
    build: docker/roadrunner
    tty: true
    stdin_open: true
    volumes:
      - ./services/task-tracker:/opt/app
      - ./var/log/app:/var/log/app
    expose:
      - "80"
    environment:
      - "DEBUG=${DEBUG}"
      - "KAFKA_DSN=kafka:9092"
      - "AUTH_HOST=http://auth"
      - "TIMEZONE=${TIMEZONE}"
      - "TIMER_SPEED=${TIMER_SPEED}"
      - "TIMER_BEGIN=${TIMER_BEGIN}"
      - "WAIT_SATIS=1"
      - "WAIT_AUTH=1"
    depends_on:
      - auth
      - kafka
    networks:
      - default
  api:
    build: docker/api
    tty: true
    stdin_open: true
    depends_on:
      - accounting
      - analytics
      - auth
      - task-tracker
    volumes:
      - ./services/api/public:/var/www
    expose:
      - "8080"
    environment:
      - "DEBUG=${DEBUG}"
    ports:
      - "${LOCAL_API_PORT}:8080"
    networks:
      - default
networks:
  default:
    name: chickinet
    driver: bridge
