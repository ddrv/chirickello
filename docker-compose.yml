version: "3.5"

services:
  mailhog:
    build: docker/mailhog
    expose:
      - "8025"
      - "1025"
    ports:
      - "${MAILHOG_PORT}:8025"
  satis:
    build: docker/satis
    expose:
      - "80"
    environment:
      - "DEBUG=${DEBUG}"
    ports:
      - "8085:80"
    volumes:
      - ./services/satis/packages:/opt/satis/packages
  rabbitmq:
    image: rabbitmq:3.9-management-alpine
    expose:
      - "5672"
      - "15672"
    ports:
      - "15672:15672"
    environment:
      - "RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}"
      - "RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}"
#  zookeeper:
#    image: blacktop/kafka:3.1
#    command: zookeeper-server-start.sh config/zookeeper.properties
#    expose:
#      - "2181"
#  kafka:
#    image: blacktop/kafka:3.1
#    depends_on:
#      - zookeeper
#    expose:
#      - "9092"
#    entrypoint: /wait-for-it.sh zookeeper:2181 -s --timeout=10 -- /kafka-entrypoint.sh
#    command: kafka-server-start.sh config/server.properties
#    environment:
#      - "KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092"
#      - "KAFKA_PORT=9092"
##      - "KAFKA_ADVERTISED_HOST_NAME=kafka"
#      - "KAFKA_CREATE_TOPICS=user:1:1"
#      - "KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181"
#      - "KAFKA_HEAP_OPTS=-Xmx2G -Xms2G"
  auth:
    build: docker/roadrunner
    tty: true
    stdin_open: true
    volumes:
      - ./services/auth:/opt/app
    expose:
      - "80"
    ports:
      - "${LOCAL_AUTH_PORT}:80"
    environment:
      - "DEBUG=${DEBUG}"
      - "RABBITMQ_DSN=${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672"
      - "OAUTH_CLIENT_ID=${OAUTH_CLIENT_ID}"
      - "OAUTH_CLIENT_SECRET=${OAUTH_CLIENT_SECRET}"
      - "OAUTH_CLIENT_REDIRECT=${OAUTH_CLIENT_REDIRECT}"
    depends_on:
      - satis
      - rabbitmq
  accounting:
    build: docker/roadrunner
    tty: true
    stdin_open: true
    volumes:
      - ./services/accounting:/opt/app
    expose:
      - "80"
    depends_on:
      - satis
      - auth
      - rabbitmq
      - sender
  analytics:
    build: docker/roadrunner
    tty: true
    stdin_open: true
    volumes:
      - ./services/analytics:/opt/app
    expose:
      - "80"
    environment:
      - "DEBUG=${DEBUG}"
    depends_on:
      - satis
      - auth
      - rabbitmq
  sender:
    build: docker/roadrunner
    tty: true
    stdin_open: true
    volumes:
      - ./services/sender:/opt/app
    environment:
      - "DEBUG=${DEBUG}"
      - "MAILER_DSN=${MAILER_DSN}"
      - "SENDER_EMAIL=${SENDER_EMAIL}"
      - "SENDER_NAME=${SENDER_NAME}"
      - "RABBITMQ_DSN=${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672"
    depends_on:
      - satis
      - auth
      - rabbitmq
  task-tracker:
    build: docker/roadrunner
    tty: true
    stdin_open: true
    volumes:
      - ./services/task-tracker:/opt/app
      - ./var/log/app:/var/log/app
    expose:
      - "80"
    environment:
      - "DEBUG=${DEBUG}"
      - "RABBITMQ_DSN=${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672"
      - "AUTH_HOST=http://auth"
      - "TIMER_SPEED=${TIMER_SPEED}"
      - "TIMER_BEGIN=${TIMER_BEGIN}"
    depends_on:
      - auth
      - rabbitmq
  api:
    build: docker/api
    tty: true
    stdin_open: true
    depends_on:
      - accounting
      - analytics
      - auth
      - task-tracker
    volumes:
      - ./services/api/public:/var/www
    expose:
      - "8080"
    environment:
      - "DEBUG=${DEBUG}"
    ports:
      - "${LOCAL_API_PORT}:8080"
networks:
  default:
    name: chickinet
    driver: bridge
