version: "3.5"

services:
  auth:
    build: docker/roadrunner
    tty: true
    stdin_open: true
    volumes:
      - ./services/auth:/var/www/app
    expose:
      - "80"
    ports:
      - "${LOCAL_AUTH_PORT}:80"
    environment:
      - "DEBUG=${DEBUG}"
      - "ADMINS=${ADMINS}"
      - "MANAGERS=${MANAGERS}"
      - "ACCOUNTANTS=${ACCOUNTANTS}"
      - "DEVELOPERS=${DEVELOPERS}"
      - "OAUTH_CLIENT_ID=${OAUTH_CLIENT_ID}"
      - "OAUTH_CLIENT_SECRET=${OAUTH_CLIENT_SECRET}"
      - "OAUTH_CLIENT_REDIRECT=${OAUTH_CLIENT_REDIRECT}"
    depends_on:
      - kafka
  accounting:
    build: docker/roadrunner
    tty: true
    stdin_open: true
    volumes:
      - ./services/accounting:/var/www/app
    expose:
      - "80"
    depends_on:
      - auth
      - kafka
  analytics:
    build: docker/roadrunner
    tty: true
    stdin_open: true
    volumes:
      - ./services/analytics:/var/www/app
    expose:
      - "80"
    environment:
      - "DEBUG=${DEBUG}"
    depends_on:
      - auth
      - kafka
  task-tracker:
    build: docker/roadrunner
    tty: true
    stdin_open: true
    volumes:
      - ./services/task-tracker:/var/www/app
    expose:
      - "80"
    environment:
      - "DEBUG=${DEBUG}"
    depends_on:
      - auth
      - kafka
  api:
    build: docker/roadrunner
    tty: true
    stdin_open: true
    depends_on:
      - accounting
      - analytics
      - auth
      - task-tracker
    volumes:
      - ./services/api:/var/www/app
    expose:
      - "80"
    environment:
      - "DEBUG=${DEBUG}"
    ports:
      - "${LOCAL_API_PORT}:80"
  zookeeper:
    image: blacktop/kafka:3.1
    command: zookeeper-server-start.sh config/zookeeper.properties
    expose:
      - "2181"
  kafka:
    image: blacktop/kafka:3.1
    depends_on:
      - zookeeper
    expose:
      - "9092"
    entrypoint: /wait-for-it.sh zookeeper:2181 -s --timeout=5 -- /kafka-entrypoint.sh
    command: kafka-server-start.sh config/server.properties
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=localhost
      - KAFKA_CREATE_TOPICS=docker:1:1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_HEAP_OPTS=-Xmx2G -Xms2G
  mailhog:
    build: docker/mailhog
    expose:
      - "8025"
      - "1025"
    ports:
      - "${MAILHOG_PORT}:8025"
networks:
  default:
    name: chickinet
    driver: bridge
